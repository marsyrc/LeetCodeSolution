/*
96. 不同的二叉搜索树
给定一个整数 n，求以 1 ... n 为节点组成的二叉搜索树有多少种？
示例:
输入: 3
输出: 5
解释:
给定 n = 3, 一共有 5 种不同结构的二叉搜索树:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
 */
/**
 * 动态规划
 * 划分成两个子问题
 * 题目要求是计算不同二叉搜索树的个数。为此，我们可以定义两个函数：
 *     G(n): 长度为 n 的序列能构成的不同二叉搜索树的个数。
 *     F(i,n): 以 i 为根、序列长度为 n 的不同二叉搜索树个数 (1≤i≤n)。

 * G和F的关系：
 * Gn)=i=1∑n​F(i,n)
 *
 * 边界：
 * G(0)=1,G(1)=1
 *
 * 对于n长度中的第i个元素，左右子树的可能情况数做笛卡尔积：
 * F(i,n)=G(i−1)⋅G(n−i)
 *
 * 联立方程：
 * G(n)=i=1∑n​G(i−1)⋅G(n−i)
 */
class Solution {
    public int numTrees(int n) {
        int[] G = new int[n+1];
        G[0] = 1;
        G[1] = 1;

        for(int i = 2; i <=n; i++){
            for(int j = 1; j <= i;j++){
                G[i] += G[j-1] * G[i-j];
            }
        }
        return G[n];
    }
}